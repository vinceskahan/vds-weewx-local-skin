#errorCatcher Echo
##    $Revision: 783 $
##    $Author: tkeffer $
##    $Date: 2013-01-01 17:44:05 -0800 (Tue, 01 Jan 2013) $
#encoding UTF-8
<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head profile="http://www.w3.org/2005/10/profile">
    #if $encoding == 'utf8'
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    #end if    
    <title>$station.location Current Weather Conditions</title>
    <link rel="stylesheet" type="text/css" href="weewx.css"/>
    <link rel="icon" type="image/png" href="favicon.ico" />
    <script type="text/javascript">
      function openURL(urlname)
      {
        window.location=urlname;
      }
      function openNoaaFile(date)
      {
        var url = "NOAA/NOAA-";
        url = url + date;
        url = url + ".txt";
        window.location=url;
      }
    </script>
    <script src="gauge.js"></script>
    <script src="RGraph/libraries/RGraph.common.core.js" ></script>
    <script src="RGraph/libraries/RGraph.bar.js" ></script>

    <script src="//code.jquery.com/jquery-1.10.2.js"></script>

  </head>

  <body>

    <div id="container">
      <div id="masthead">
        <h1>$station.location</h1>
        <h2>Current Weather Conditions</h2>
          <h2>$current.dateTime</h2>
      </div>

      <div id="stats_group">

        <div class="stats">

<center>
<!-- <object width="290" height="300"><param name="movie" value="http://www.wunderground.com/swf/pws_mini_rf.swf?station=KWAFEDER15&freq=2.5&camurl=http%3A%2F%2Ficons.wunderground.com%2Fwebcamramdisk%2Fv%2Fd%2Fvds%2F1%2Fcurrent.jpg&units=english&lang=EN" /><embed src="http://www.wunderground.com/swf/pws_mini_rf.swf?station=KWAFEDER15&camurl=http%3A%2F%2Ficons.wunderground.com%2Fwebcamramdisk%2Fv%2Fd%2Fvds%2F1%2Fcurrent.jpg&freq=2.5&units=english&lang=EN" type="application/x-shockwave-flash" width="290" height="300" /></object>-->
<object width="290" height="300"><img src="webcam.jpg"?></img></object>
<p>
</center>
<p>

          <div class="stats_header">
            Current Conditions
          </div>

          <table>
            <tbody>
              <tr>
                <td class="stats_label">Outside Temperature</td>
                <td class="stats_data">$current.outTemp</td>
              </tr>
              <tr>
                <td class="stats_label">Baseball Room Temp</td>
                <td class="stats_data">$latest($data_binding='pi_binding').extraTemp1</td>
              </tr>
              <tr>
                <td class="stats_label">Wind Chill</td>
                <td class="stats_data">$current.windchill</td>
              </tr>
              <tr>
                <td class="stats_label">Heat Index</td>
                <td class="stats_data">$current.heatindex</td>
              </tr>
              <tr>
                <td class="stats_label">Dewpoint</td>
                <td class="stats_data">$current.dewpoint</td>
              </tr>
              <tr>
                <td class="stats_label">Humidity</td>
                <td class="stats_data">$current.outHumidity</td>
              </tr>
              <tr>
                <td class="stats_label">Barometer</td>
                <td class="stats_data">$current.barometer</td>
              </tr>
              <tr>
                <td class="stats_label">Barometer trend ($trend.time_delta.hour.format("%.0f"))</td>
                <td class="stats_data">$trend.barometer</td>
              </tr>
              <tr>
                <td class="stats_label">Wind</td>
                <td class="stats_data">$current.windSpeed from $current.windDir</td>
              </tr>
              <tr>
                <td class="stats_label">Rain Rate</td>
                <td class="stats_data">$current.rainRate</td>
              </tr>
              <tr>
                <td class="stats_label">Last Rain</td>
                <td class="stats_data">$time_since_last_rain</td>
              </tr>
              <tr>
                <td class="stats_label">Inside Temperature</td>
                <td class="stats_data">$current.inTemp</td>
              </tr>
<!--
              #if $day.extraTemp1.has_data
              <tr>
                <td class="stats_label">Pond Temperature</td>
                <td class="stats_data">$current.extraTemp1</td>
              </tr>
              #end if
-->
              #if $day.UV.has_data
              <tr>
                <td class="stats_label">UV</td>
                <td class="stats_data">$current.UV</td>
              </tr>
              #end if
              #if $day.ET.has_data and $day.ET.sum.raw > 0.0
              <tr>
                <td class="stats_label">ET</td>
                <td class="stats_data">$current.ET</td>
              </tr>
              #end if
              #if $day.radiation.has_data
              <tr>
                <td class="stats_label">Solar Radiation</td>
                <td class="stats_data">$current.radiation</td>
              </tr>
              #end if
              <tr>
                <td class="stats_label">Console Battery (4.8V = ok)</td>
                <td class="stats_data">$current.consBatteryVoltage</td>
              </tr>
              <tr>
                <td class="stats_label">ISS Battery (0 = ok)</td>
                <td class="stats_data">$current.txBatteryStatus</td>
              </tr>
            </tbody>
          </table>
        </div>

        <p>&nbsp;</p>

        <div class="stats">
          <div class="stats_header">
            Since Midnight
          </div>
          <table>
            <tbody>
              <tr>
                <td class="stats_label">
                  High Temperature<br/>
                  Low Temperature
                </td>
                <td class="stats_data">
                  $day.outTemp.max at $day.outTemp.maxtime<br/>
                  $day.outTemp.min at $day.outTemp.mintime
                </td>
              </tr>
              <tr>
                <td class="stats_label">
                  High Heat Index<br/>
                  Low Wind Chill
                </td>
                <td class="stats_data">
                  $day.heatindex.max at $day.heatindex.maxtime<br/>
                  $day.windchill.min at $day.windchill.mintime
                </td>
              </tr>
              <tr>
                <td class="stats_label">
                  High Humidity<br/>
                  Low Humidity
                </td>
                <td class="stats_data">
                  $day.outHumidity.max at $day.outHumidity.maxtime<br/>
                  $day.outHumidity.min at $day.outHumidity.mintime
                </td>
              </tr>
              <tr>
                <td class="stats_label">
                  High Dewpoint<br/>
                  Low Dewpoint
                </td>
                <td class="stats_data">
                  $day.dewpoint.max at $day.dewpoint.maxtime<br/>
                  $day.dewpoint.min at $day.dewpoint.mintime
                </td>
              </tr>
              <tr>
                <td class="stats_label">
                  High Barometer<br/>
                  Low Barometer
                </td>
                <td class="stats_data">
                  $day.barometer.max at $day.barometer.maxtime<br/>
                  $day.barometer.min at $day.barometer.mintime
                </td>
              </tr>
              <tr>
                <td class="stats_label">Today's Rain</td>
                <td class="stats_data">$day.rain.sum</td>
              </tr>
              <tr>
                <td class="stats_label">High Rain Rate</td>
                <td class="stats_data">$day.rainRate.max at $day.rainRate.maxtime</td>
              </tr>
              <tr>
                <td class="stats_label">
                  High Wind
                </td>
                <td class="stats_data">
                  $day.wind.max from $day.wind.gustdir at $day.wind.maxtime
                </td>
              </tr>
              <tr>
                <td class="stats_label">
                  Average Wind
                </td>
                <td class="stats_data">
                  $day.wind.avg
                </td>
              </tr>
              <tr>
                <td class="stats_label">
                  RMS Wind
                </td>
                <td class="stats_data">
                  $day.wind.rms
                </td>
              </tr>

              <tr>
                <td class="stats_label">
                  Vector Average Speed<br/>
                  Vector Average Direction
                </td>
                <td class="stats_data">
                  $day.wind.vecavg<br/>
                  $day.wind.vecdir
                </td>
              </tr>

              <tr>
                <td class="stats_label">
                  High Inside Temperature<br/>
                  Low Inside Temperature
                </td>
                <td class="stats_data">
                  $day.inTemp.max at $day.inTemp.maxtime<br/>
                  $day.inTemp.min at $day.inTemp.mintime
                </td>
              </tr>
			  #if $day.extraTemp1.has_data
              <tr>
                <td class="stats_label">
                  High Pond Temperature<br/>
                  Low Pond Temperature
                </td>
                <td class="stats_data">
                  $day.extraTemp1.max at $day.extraTemp1.maxtime<br/>
                  $day.extraTemp1.min at $day.extraTemp1.mintime
                </td>
              </tr>
              #end if
              #if $day.UV.has_data
              <tr>
                <td class="stats_label">
                  High UV<br/>
                  Low UV
                </td>
                <td class="stats_data">
                  $day.UV.max at $day.UV.maxtime<br/>
                  $day.UV.min at $day.UV.mintime
                </td>
              </tr>
              #end if
              #if $day.ET.has_data and $day.ET.sum.raw >0.0
              <tr>
                <td class="stats_label">
                  High ET<br/>
                  Low ET
                </td>
                <td class="stats_data">
                  $day.ET.max at $day.ET.maxtime<br/>
                  $day.ET.min at $day.ET.mintime
                </td>
              </tr>
              #end if
              #if $day.radiation.has_data
              <tr>
                <td class="stats_label">
                  High Radiation<br/>
                  Low Radiation
                </td>
                <td class="stats_data">
                  $day.radiation.max at $day.radiation.maxtime<br/>
                  $day.radiation.min at $day.radiation.mintime
                </td>
              </tr>
              #end if
            </tbody>
          </table>
        </div> <!--End class "stats" -->

        <p>&nbsp;</p>

        #if $Extras.has_key('radar_img')
        <div id="radar_img">
              <a  href="$Extras.radar_url"><img src="$Extras.radar_img" alt="Radar" /></a>
          <p>Click image for expanded radar loop</p>
        </div>
        #end if


        <p>&nbsp;</p>
        <div id="about">
          <table>
            <caption class="caption">About this Station</caption>
            <tr>
              <td class="label">Latitude:</td>
              <td class="data">$station.latitude[0]&deg; $station.latitude[1]' $station.latitude[2]</td>
            </tr>
            <tr>
              <td class="label">Longitude:</td>
              <td class="data">$station.longitude[0]&deg; $station.longitude[1]' $station.longitude[2]</td>
            </tr>
            <tr>
              <td class="label">Altitude:</td>
              <td class="data">$station.altitude</td>
            </tr>
          <tr></tr>
            <tr>
              <td class="label">Station type:</td>
              <td class="data"><a href="http://davisnet.com/weather/products/professional-home-weather-stations.asp"> Davis $station.hardware</a> </td>
            </tr>
            <tr>
              <td class="label">Software version:</td>
              <td class="data"><a href="http://www.weewx.com">'weewx'</a> v$station.version</td>
            </tr>
            <tr>
              <td class="label">Weewx uptime:</td>
              <td class="data">$station.uptime</td>
            </tr>
            <tr>
              <td class="label">Server uptime:</td>
              <td class="data">$station.os_uptime</td>
            </tr>
<!-- we don't run this now
            <tr>
              <td class="label">Performance Graphs</td>
              <td class="data"><a href="/weewx/cmon">here</a></td>
            </tr>
-->
          <tr>
             <td class="label">Timelapse Movies</td>
             <td class="data"><a href="/timelapse">here</a></td>
          </tr>
        </table>

        </div> <!-- End id "about" -->

      </div>

      <div id="content">

      <div id="navbar">

	<canvas id="outTemp"></canvas>
	<canvas id="outHumidity"></canvas>
	<canvas id="windGust"></canvas> 
      
   <!-- rain -->
    <canvas id="rainBar" width="120" height="200">[No canvas support]</canvas>
    <script>
	window.onload = function()
	{
	 var rainTotal = $day.rain.sum.formatted
	 // uncomment to play around with autoscaling
	 // var rainTotal = 1.23
	 if (rainTotal < 0.1) { rainYMAX = 0.25 } 
	 else if (rainTotal < 0.5) { rainYMAX = 1 } 
	 else if (rainTotal < 1.0) { rainYMAX = 1.5 } 
	 else if (rainTotal < 1.5) { rainYMAX = 2 } 
	 else if (rainTotal < 2.0) { rainYMAX = 3 } 
	 else { rainYMAX = 5 } 
         var bar = new RGraph.Bar('rainBar', [rainTotal])
                .Set('ymax', rainYMAX)
		.Set('colors',['darksalmon'])
		.Set('scale.decimals', 2)
		.Set('gutter.left', 35)
		.Set('labels',['rain (in)'])
                .Draw();
        }
    </script>

	<script>
		var barChartData = {
			labels : ["Rain (in)");
			datasets : [
				{
				fillColor : "rgba(220,220,220,0.8)",
				strokeColor : "rgba(220,220,220,1)",
				},
			]
		}
	var myLine = new Chart(document.getElementById("canvas").getContext("2d")).Bar(barChartData);
	</script>
<p>

        <input type="button" value="    Current   " onclick="openURL('index.html')" />
        <input type="button" value="     Week     " onclick="openURL('week.html')" />
        <input type="button" value="     Month    " onclick="openURL('month.html')" />
        <input type="button" value="     Year     " onclick="openURL('year.html')" />
<br>
<!--
        <input type="button" value="    Forecast  " onclick="openURL('forecast')" /> 
-->
        <input type="button" value="    Phone     " onclick="openURL('phone.html')" />
        <input type="button" value="   Bootstrap  " onclick="openURL('bootstrap/')" />
        <input type="button" value=" Memory Usage " onclick="openURL('mem/')" />
        <input type="button" value="    Alltime   " onclick="openURL('alltime.html')" />
        <p>Monthly summary:&nbsp;
        <select NAME=noaaselect onchange="openNoaaFile(value)">
        #for $monthYear in $SummaryByMonth
            <option value="$monthYear">$monthYear</option>
        #end for
	    <option selected>-Select month-</option>
        </select>
        <br/>
        Yearly summary:&nbsp;
        <select NAME=noaaselect onchange="openNoaaFile(value)">
        #for $yr in $SummaryByYear
            <option value="$yr">$yr</option>
        #end for
	    <option selected>-Select year-</option>
        </select>
        </p>
      
      </div>   <!-- end id "navbar" -->
 
        <div id="plots">
          <img src="daytempdew.png"   alt="temperatures" />
          <img src="dayBaseball.png"  alt="baseball" />
          <img src="daytempchill.png" alt="heatchill" />
          <img src="dayrain.png"      alt="rain" />
          <img src="daywind.png"      alt="wind" />
          <img src="daybarometer.png" alt="barometer"/>
          <img src="daywinddir.png"   alt="Hi Wind" />
          <img src="dayinside.png"    alt="Inside" />
          <img src="daywindvec.png"   alt="Wind Vector" />
          <img src="dayhumidity.png"   alt="Humidity" />
          #if $day.radiation.has_data
          <img src="dayradiation.png" alt="Radiation" />
          #end if
          #if $day.rxCheckPercent.has_data
          <img src="dayrx.png"        alt="day rx percent"/>
          #end if
<!--
          #if $day.extraTemp1.has_data
          <img src="daypond.png"      alt="Pond Temperatures" />
          #end if
-->
          <img src="daySensorStatus.png"      alt="Sensor Status" />
<!-- superseded by mem extension
          <img src="dayMem.png"      alt="Memory" />
-->
<!-- not updated to v3
          <img src="dayLoad.png"      alt="Load" />
-->
        </div> <!-- End id "plots" -->

      </div> <!--End class "stats_group" -->

      </div> <!-- End id "content" -->

    </div>

    ## Include the Google Analytics code if the user has supplied an ID:
    #if $Extras.has_key('googleAnalyticsId')
    <script type="text/javascript">
        var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
        document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    </script>
    <script type="text/javascript">
        try{
            var pageTracker = _gat._getTracker("$Extras.googleAnalyticsId");
            pageTracker._trackPageview();
        } catch(err) {}
    </script>
    #end if


<style>
body{padding:0;margin:0;background:LightGrey;}
</style>
</head>

	</div>

<!--- end of gauges script -->
<script>

var outTemp = new Gauge({
	renderTo  : 'outTemp',
	width     : 200,
	height    : 200,
	glow      : false,
	units     : 'Temperature',
	strokeTicks : true,
    minValue    : -20,
    maxValue    : 120,
    majorTicks  : ['-20','0','20','40','60','80','100','120'],
    minorTicks  : 10,
    strokeTicks : false,
    valueFormat : { int: 1, dec: 1 },
    highlights  : [
        { from : $alltime.outTemp.min.formatted, to : $week.outTemp.min.formatted, color : 'LightSalmon' },
        { from : $week.outTemp.max.formatted, to : $alltime.outTemp.max.formatted, color : 'LightSalmon' }
    ],
});
outTemp.onready = function() { setInterval( function() { outTemp.setValue( $current.outTemp.formatted ); }, 100 ); };
outTemp.draw();

var outHumidity = new Gauge({
	renderTo  : 'outHumidity',
	width     : 200,
	height    : 200,
	glow      : false,
	units     : 'Humidity',
	strokeTicks : true,
	majorTicks : ['0', '20', '40', '60', '80', '100'],
    valueFormat : { int: 1, dec: 0 },
    highlights  : [
        { from : $alltime.outHumidity.min.formatted, to : $week.outHumidity.min.formatted, color : 'LightSalmon' },
        { from : $week.outHumidity.max.formatted, to : $alltime.outHumidity.max.formatted, color : 'LightSalmon' }
    ],
});
outHumidity.onready = function() { setInterval( function() { outHumidity.setValue( $current.outHumidity.formatted ); }, 100 ); };
outHumidity.draw();

var windGust = new Gauge({
	renderTo  : 'windGust',
	width     : 200,
	height    : 200,
	glow      : false,
	units : 'Gust',
	strokeTicks : true,
	valueFormat : { int: 1, dec: 0 },
	maxValue : 60,
	majorTicks : ['0', '10', '20', '30', '40', '50','60'],
    valueFormat : { int: 1, dec: 0 },
    highlights  : [
        { from : 0, to : $week.wind.min.formatted, color : 'LightSalmon' },
        { from : $week.wind.max.formatted, to : $alltime.wind.max.formatted, color : 'LightSalmon' }
    ],
});
windGust.onready = function() { windGust.setValue( $current.windSpeed.formatted ); };
windGust.draw();


</script>

<!--- end of gauges script -->

</body>
</html>


